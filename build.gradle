group 'com.zup.select.process'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:1.5.3.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.projectlombok:lombok:1.16.16")
    compile("com.h2database:h2")
    compile("com.google.guava:guava:21.0")

    testCompile("io.rest-assured:rest-assured:3.0.2")
    testCompile("io.rest-assured:json-path:3.0.2")
    testCompile("org.hamcrest:hamcrest-all:1.3")
    testCompile("junit:junit:4.12")
    testCompile("org.mockito:mockito-all:1.10.19")
    testCompile("org.assertj:assertj-core:3.6.2")
    testCompile("org.springframework.boot:spring-boot-starter-test:1.5.3.RELEASE")
}

tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        debug {
            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
            exceptionFormat "full"
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) {
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}